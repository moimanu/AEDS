public class InsertionSort {
    
    public InsertionSort() {}

    /*
        InsertionSort:

        O objetivo do código é fixar uma chave e comparar se os valores dos índices anteriores são maiores que tal chave. A partir do momento que se identifica um valor maior, ocorre uma "quase troca", onde a chave é armazenada em uma variável auxiliar, até que se encontre um valor menor e quebrar o laço.
    */

    public static void insertionSort(int[]V, int tamV) {

        int i = 0; //A variável "i" se refere ao valor exclusivamente anterior à chave a ser comparada (atual)
        int j = 1; //A variável "j" se refere ao índice da chave a ser comparada (atual)
        int aux = 0; //Será utilizada para ajudar na realização da troca

        while(j < tamV) { //Começa a partir do segundo item, até o último.

            aux = V[j]; //Já armazena o valor da chave a ser conferida, de antemão
            i = j - 1; //Já indica o índice anterior a chave

            while((i >= 0) && (V[i] > aux)) { //Para cada item anterior à chave, confere se é válido e se é maior que o valor da chave
                V[i+1] = V[i]; //Se sim, o anterior é atribuído ao atual
                i--; //Passa pro anterior
            }

            V[i+1] = aux; //Após sair do laço, o espaço que ficou vazio recebe o valor da chave (guardado em "aux")
            j++; //Vai para o próximo indice do vetor
        }
    }
}